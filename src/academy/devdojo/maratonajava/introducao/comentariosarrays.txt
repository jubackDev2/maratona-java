 // Arrays

        Espaço em memoria que pode ter mais de um valor

       - sintaaxe  -> int [ ] idades; - isso aqui na verdade é uma variavel do tipo
        reference, não é um tipo primitivo mais

          obs: variavel do tipo primitivo não poddemos iniciar com "null"
        somente tipos de referencia podem ser inicializados com null

        e para declarar, precisamos usar o new:
        int [] idades = new int [3];
          obs: no Java, todas as vezes que voce declara um array voce obrigatoriamente
        precisa dizer quanto de espaços em memoria voce está alocando.  [ 3 ].

        - Todas as vezes que voce cria um array esse array tem posições, posição 0, posição
           1, posição 2...

        - Todas as vezes que voce cria um array, tem uns tipos de inicialização padrão
        na memoria alocada pelo array, entao todos os tipos primitivos vão iniciar com
        um valor. exemplo: 0, se for do tipo numérico, ou 0.0 se for do tipo ponto
        flutuante e se for String vai ser nulo.



        Atribuindo valores no array

        - idades [0] = 21;
        - idades [1] = 25/;

     - continuação aula pt 02
     nós sabemos que, ao criar arrays nós temos a variavel do lado esquerdo, que é do tipo
     reference e a do lado direito que é um objeto. lembrando que um array é sempre um objeto




